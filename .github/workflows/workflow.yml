name: Rust CI-pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run Clippy (Rust Linter)
        run: |
          cd rust
          cargo clippy --all-targets --all-features

      - name: Build Backend
        run: |
          cd rust
          cargo build --release

      - name: Run Tests
        run: |
          cd rust
          cargo test --all --verbose

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Image Tags
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_TAG=ghcr.io/${REPO_OWNER}/rust-project:${{ github.sha }}" >> $GITHUB_ENV
          echo "IMAGE_TAG_LATEST=ghcr.io/${REPO_OWNER}/rust-project:latest" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build -t $IMAGE_TAG -t $IMAGE_TAG_LATEST -f rust/Dockerfile rust/

      - name: Scan image
        uses: anchore/scan-action@v6
        with:
          image: '${{ env.IMAGE_TAG_LATEST }}'
          fail-build: false
